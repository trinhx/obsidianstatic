"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[848],{4273:function(e,t,n){n.d(t,{c:function(){return d}});var r=n(9250),i=n(1714),l=n(14);function d(e){var t,n={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:l.Z(e.nodes(),function(t){var n=e.node(t),i=e.parent(t),l={v:t};return r.Z(n)||(l.value=n),r.Z(i)||(l.parent=i),l}),edges:l.Z(e.edges(),function(t){var n=e.edge(t),i={v:t.v,w:t.w};return r.Z(t.name)||(i.name=t.name),r.Z(n)||(i.value=n),i})};return r.Z(e.graph())||(n.value=(t=e.graph(),(0,i.Z)(t,4))),n}n(1889)},4848:function(e,t,n){n.d(t,{r:function(){return k}});var r=n(4595),i=n(4273),l=n(2342),d=n(7237),a=n(7058),o=n(2488);let s={},h={},g={},c=()=>{h={},g={},s={}},f=(e,t)=>(d.l.trace("In isDecendant",t," ",e," = ",h[t].includes(e)),!!h[t].includes(e)),u=(e,t)=>(d.l.info("Decendants of ",t," is ",h[t]),d.l.info("Edge is ",e),e.v!==t&&e.w!==t&&(h[t]?h[t].includes(e.v)||f(e.v,t)||f(e.w,t)||h[t].includes(e.w):(d.l.debug("Tilt, ",t,",not in decendants"),!1))),w=(e,t,n,r)=>{d.l.warn("Copying children of ",e,"root",r,"data",t.node(e),r);let i=t.children(e)||[];e!==r&&i.push(e),d.l.warn("Copying (nodes) clusterId",e,"nodes",i),i.forEach(i=>{if(t.children(i).length>0)w(i,t,n,r);else{let l=t.node(i);d.l.info("cp ",i," to ",r," with parent ",e),n.setNode(i,l),r!==t.parent(i)&&(d.l.warn("Setting parent",i,t.parent(i)),n.setParent(i,t.parent(i))),e!==r&&i!==e?(d.l.debug("Setting parent",i,e),n.setParent(i,e)):(d.l.info("In copy ",e,"root",r,"data",t.node(e),r),d.l.debug("Not Setting parent for node=",i,"cluster!==rootId",e!==r,"node!==clusterId",i!==e));let a=t.edges(i);d.l.debug("Copying Edges",a),a.forEach(i=>{d.l.info("Edge",i);let l=t.edge(i.v,i.w,i.name);d.l.info("Edge data",l,r);try{u(i,r)?(d.l.info("Copying as ",i.v,i.w,l,i.name),n.setEdge(i.v,i.w,l,i.name),d.l.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):d.l.info("Skipping copy of edge ",i.v,"-->",i.w," rootId: ",r," clusterId:",e)}catch(e){d.l.error(e)}})}d.l.debug("Removing node",i),t.removeNode(i)})},p=(e,t)=>{let n=t.children(e),r=[...n];for(let i of n)g[i]=e,r=[...r,...p(i,t)];return r},v=(e,t)=>{d.l.trace("Searching",e);let n=t.children(e);if(d.l.trace("Searching children of id ",e,n),n.length<1)return d.l.trace("This is a valid node",e),e;for(let r of n){let n=v(r,t);if(n)return d.l.trace("Found replacement for",e," => ",n),n}},y=e=>s[e]&&s[e].externalConnections&&s[e]?s[e].id:e,x=(e,t)=>{if(!e||t>10){d.l.debug("Opting out, no graph ");return}d.l.debug("Opting in, graph "),e.nodes().forEach(function(t){let n=e.children(t);n.length>0&&(d.l.warn("Cluster identified",t," Replacement id in edges: ",v(t,e)),h[t]=p(t,e),s[t]={id:v(t,e),clusterData:e.node(t)})}),e.nodes().forEach(function(t){let n=e.children(t),r=e.edges();n.length>0?(d.l.debug("Cluster identified",t,h),r.forEach(e=>{if(e.v!==t&&e.w!==t){let n=f(e.v,t),r=f(e.w,t);n^r&&(d.l.warn("Edge: ",e," leaves cluster ",t),d.l.warn("Decendants of XXX ",t,": ",h[t]),s[t].externalConnections=!0)}})):d.l.debug("Not a cluster ",t,h)}),e.edges().forEach(function(t){let n=e.edge(t);d.l.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),d.l.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let r=t.v,i=t.w;if(d.l.warn("Fix XXX",s,"ids:",t.v,t.w,"Translating: ",s[t.v]," --- ",s[t.w]),s[t.v]&&s[t.w]&&s[t.v]===s[t.w]){d.l.warn("Fixing and trixing link to self - removing XXX",t.v,t.w,t.name),d.l.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),r=y(t.v),i=y(t.w),e.removeEdge(t.v,t.w,t.name);let l=t.w+"---"+t.v;e.setNode(l,{domId:l,id:l,labelStyle:"",labelText:n.label,padding:0,shape:"labelRect",style:""});let a=JSON.parse(JSON.stringify(n)),o=JSON.parse(JSON.stringify(n));a.label="",a.arrowTypeEnd="none",o.label="",a.fromCluster=t.v,o.toCluster=t.v,e.setEdge(r,l,a,t.name+"-cyclic-special"),e.setEdge(l,i,o,t.name+"-cyclic-special")}else(s[t.v]||s[t.w])&&(d.l.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),r=y(t.v),i=y(t.w),e.removeEdge(t.v,t.w,t.name),r!==t.v&&(n.fromCluster=t.v),i!==t.w&&(n.toCluster=t.w),d.l.warn("Fix Replacing with XXX",r,i,t.name),e.setEdge(r,i,n,t.name))}),d.l.warn("Adjusted Graph",i.c(e)),b(e,0),d.l.trace(s)},b=(e,t)=>{if(d.l.warn("extractor - ",t,i.c(e),e.children("D")),t>10){d.l.error("Bailing out");return}let n=e.nodes(),r=!1;for(let t of n){let n=e.children(t);r=r||n.length>0}if(!r){d.l.debug("Done, no node has children",e.nodes());return}for(let r of(d.l.debug("Nodes = ",n,t),n))if(d.l.debug("Extracting node",r,s,s[r]&&!s[r].externalConnections,!e.parent(r),e.node(r),e.children("D")," Depth ",t),s[r]){if(!s[r].externalConnections&&e.children(r)&&e.children(r).length>0){d.l.warn("Cluster without external connections, without a parent and with children",r,t);let n=e.graph(),l="TB"===n.rankdir?"LR":"TB";s[r]&&s[r].clusterData&&s[r].clusterData.dir&&(l=s[r].clusterData.dir,d.l.warn("Fixing dir",s[r].clusterData.dir,l));let o=new a.k({multigraph:!0,compound:!0}).setGraph({rankdir:l,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});d.l.warn("Old graph before copy",i.c(e)),w(r,e,o,r),e.setNode(r,{clusterNode:!0,id:r,clusterData:s[r].clusterData,labelText:s[r].labelText,graph:o}),d.l.warn("New graph after copy node: (",r,")",i.c(o)),d.l.debug("Old graph after copy",i.c(e))}else d.l.warn("Cluster ** ",r," **not meeting the criteria !externalConnections:",!s[r].externalConnections," no parent: ",!e.parent(r)," children ",e.children(r)&&e.children(r).length>0,e.children("D"),t),d.l.debug(s)}else d.l.debug("Not a cluster",r,t);for(let r of(n=e.nodes(),d.l.warn("New list of nodes",n),n)){let n=e.node(r);d.l.warn(" Now next level",r,n),n.clusterNode&&b(n.graph,t+1)}},m=(e,t)=>{if(0===t.length)return[];let n=Object.assign(t);return t.forEach(t=>{let r=e.children(t),i=m(e,r);n=[...n,...i]}),n},N=e=>m(e,e.children()),E=(e,t)=>{d.l.trace("Creating subgraph rect for ",t.id,t);let n=e.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),r=n.insert("rect",":first-child"),i=n.insert("g").attr("class","cluster-label"),a=i.node().appendChild((0,l.c)(t.labelText,t.labelStyle,void 0,!0)),s=a.getBBox();if((0,d.j)((0,d.g)().flowchart.htmlLabels)){let e=a.children[0],t=(0,o.Ys)(a);s=e.getBoundingClientRect(),t.attr("width",s.width),t.attr("height",s.height)}let h=0*t.padding,g=t.width<=s.width+h?s.width+h:t.width;t.width<=s.width+h?t.diff=(s.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,d.l.trace("Data ",t,JSON.stringify(t)),r.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-g/2).attr("y",t.y-t.height/2-h/2).attr("width",g).attr("height",t.height+h),i.attr("transform","translate("+(t.x-s.width/2)+", "+(t.y-t.height/2)+")");let c=r.node().getBBox();return t.width=c.width,t.height=c.height,t.intersect=function(e){return(0,l.i)(t,e)},n},X=(e,t)=>{let n=e.insert("g").attr("class","note-cluster").attr("id",t.id),r=n.insert("rect",":first-child"),i=0*t.padding,d=i/2;r.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-d).attr("y",t.y-t.height/2-d).attr("width",t.width+i).attr("height",t.height+i).attr("fill","none");let a=r.node().getBBox();return t.width=a.width,t.height=a.height,t.intersect=function(e){return(0,l.i)(t,e)},n},C=(e,t)=>{let n=e.insert("g").attr("class",t.classes).attr("id",t.id),r=n.insert("rect",":first-child"),i=n.insert("g").attr("class","cluster-label"),a=n.append("rect"),s=i.node().appendChild((0,l.c)(t.labelText,t.labelStyle,void 0,!0)),h=s.getBBox();if((0,d.j)((0,d.g)().flowchart.htmlLabels)){let e=s.children[0],t=(0,o.Ys)(s);h=e.getBoundingClientRect(),t.attr("width",h.width),t.attr("height",h.height)}h=s.getBBox();let g=0*t.padding,c=g/2,f=t.width<=h.width+t.padding?h.width+t.padding:t.width;t.width<=h.width+t.padding?t.diff=(h.width+0*t.padding-t.width)/2:t.diff=-t.padding/2,r.attr("class","outer").attr("x",t.x-f/2-c).attr("y",t.y-t.height/2-c).attr("width",f+g).attr("height",t.height+g),a.attr("class","inner").attr("x",t.x-f/2-c).attr("y",t.y-t.height/2-c+h.height-1).attr("width",f+g).attr("height",t.height+g-h.height-3),i.attr("transform","translate("+(t.x-h.width/2)+", "+(t.y-t.height/2-t.padding/3+((0,d.j)((0,d.g)().flowchart.htmlLabels)?5:3))+")");let u=r.node().getBBox();return t.height=u.height,t.intersect=function(e){return(0,l.i)(t,e)},n},S=(e,t)=>{let n=e.insert("g").attr("class",t.classes).attr("id",t.id),r=n.insert("rect",":first-child"),i=0*t.padding;r.attr("class","divider").attr("x",t.x-t.width/2-i/2).attr("y",t.y-t.height/2).attr("width",t.width+i).attr("height",t.height+i);let d=r.node().getBBox();return t.width=d.width,t.height=d.height,t.diff=-t.padding/2,t.intersect=function(e){return(0,l.i)(t,e)},n},D={rect:E,roundedWithTitle:C,noteGroup:X,divider:S},O={},B=(e,t)=>{d.l.trace("Inserting cluster");let n=t.shape||"rect";O[t.id]=D[n](e,t)},J=()=>{O={}},T=(e,t,n,a)=>{d.l.info("Graph in recursive render: XXX",i.c(t),a);let o=t.graph().rankdir;d.l.trace("Dir in recursive render - dir:",o);let h=e.insert("g").attr("class","root");t.nodes()?d.l.info("Recursive render XXX",t.nodes()):d.l.info("No nodes found for",t),t.edges().length>0&&d.l.trace("Recursive edges",t.edge(t.edges()[0]));let g=h.insert("g").attr("class","clusters"),c=h.insert("g").attr("class","edgePaths"),f=h.insert("g").attr("class","edgeLabels"),u=h.insert("g").attr("class","nodes");t.nodes().forEach(function(e){let r=t.node(e);if(void 0!==a){let n=JSON.parse(JSON.stringify(a.clusterData));d.l.info("Setting data for cluster XXX (",e,") ",n,a),t.setNode(a.id,n),t.parent(e)||(d.l.trace("Setting parent",e,a.id),t.setParent(e,a.id,n))}if(d.l.info("(Insert) Node XXX"+e+": "+JSON.stringify(t.node(e))),r&&r.clusterNode){d.l.info("Cluster identified",e,r.width,t.node(e));let i=T(u,r.graph,n,t.node(e)),a=i.elem;(0,l.u)(r,a),r.diff=i.diff||0,d.l.info("Node bounds (abc123)",e,r,r.width,r.x,r.y),(0,l.s)(a,r),d.l.warn("Recursive render complete ",a,r)}else t.children(e).length>0?(d.l.info("Cluster - the non recursive path XXX",e,r.id,r,t),d.l.info(v(r.id,t)),s[r.id]={id:v(r.id,t),node:r}):(d.l.info("Node - the non recursive path",e,r.id,r),(0,l.e)(u,t.node(e),o))}),t.edges().forEach(function(e){let n=t.edge(e.v,e.w,e.name);d.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),d.l.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(t.edge(e))),d.l.info("Fix",s,"ids:",e.v,e.w,"Translateing: ",s[e.v],s[e.w]),(0,l.f)(f,n)}),t.edges().forEach(function(e){d.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e))}),d.l.info("#############################################"),d.l.info("###                Layout                 ###"),d.l.info("#############################################"),d.l.info(t),(0,r.bK)(t),d.l.info("Graph after layout:",i.c(t));let w=0;return N(t).forEach(function(e){let n=t.node(e);d.l.info("Position "+e+": "+JSON.stringify(t.node(e))),d.l.info("Position "+e+": ("+n.x,","+n.y,") width: ",n.width," height: ",n.height),n&&n.clusterNode?(0,l.p)(n):t.children(e).length>0?(B(g,n),s[n.id].node=n):(0,l.p)(n)}),t.edges().forEach(function(e){let r=t.edge(e);d.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(r),r);let i=(0,l.g)(c,e,r,s,n,t);(0,l.h)(r,i)}),t.nodes().forEach(function(e){let n=t.node(e);d.l.info(e,n.type,n.diff),"group"===n.type&&(w=n.diff)}),{elem:h,diff:w}},k=(e,t,n,r,a)=>{(0,l.a)(e,n,r,a),(0,l.b)(),(0,l.d)(),J(),c(),d.l.warn("Graph at first:",i.c(t)),x(t),d.l.warn("Graph after:",i.c(t)),T(e,t,r)}}}]);